version: '3.8'

services:
  db:
    image: mysql
    container_name: db
    networks:
      - network
    environment:
      MYSQL_ROOT_PASSWORD: 
      MYSQL_DATABASE: grafana
      MYSQL_USER: 
      MYSQL_PASSWORD: 

    volumes:
      - dbdata:/var/lib/mysql
    deploy:
      placement:
        constraints:
          - node.labels.grafana-db == true

      
  prometheus:
    image: prom/prometheus
    volumes:
      - /mnt/shared/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    networks:
      - network
      - prometheus
    deploy:
      placement:
        constraints:
          - node.role == manager
          - node.labels.prometheus == true

  alertmanager:
    image: prom/alertmanager
    volumes:
      - /mnt/shared/alertmanager:/etc/alertmanager
    networks:
      - network
    command:
      - --config.file=/etc/alertmanager/config.yml
      - --storage.path=/alertmanager
    deploy:
      placement:
        constraints:
          - node.role == manager
          - node.labels.alertmanager == true

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro  
    command:
      - --docker_only
    privileged: true
    networks:
      - network
    deploy:
      mode: global

  node-exporter:
    image: prom/node-exporter
    hostname: '{{.Node.Hostname}}'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    networks:
      - network
    deploy:
      mode: global
      
  grafana:
    image: grafana/grafana   
    volumes:
      - grafana_data:/var/lib/grafana
      - /mnt/shared/grafana:/etc/grafana/provisioning
      - /mnt/shared/grafana.ini:/etc/grafana/grafana.ini:ro
      #- /mnt/shared/grafana/emails:/usr/share/grafana/public/emails
    networks:
      - network
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
    deploy:
      placement:
        constraints:
          - node.role == manager
          - node.labels.grafana == true

  grafana_proxy:
    image: harbor.elofun.net/core/nginx-proxy:0.0.1
    networks:
      - network
      - traefik_public
      - ingress_network
    environment:
      PROXY_MAP: |
        / => grafana:3000/   
    deploy:
      labels:
        - ingress.host=grafana.hongduydevops.id.vn

  node-exporter_proxy:
    image: harbor.elofun.net/core/nginx-proxy:0.0.1
    networks:
      - network
      - traefik_public
      - ingress_network
    environment:
      PROXY_MAP: |
        / => node-exporter:9100/
    deploy:
     
      labels:
        - ingress.host=node.hongduydevops.id.vn 

  prometheus_proxy:
    image: harbor.elofun.net/core/nginx-proxy:0.0.1
    networks:
      - network
      - traefik_public
      - ingress_network
    environment:
      PROXY_MAP: |
        / => prometheus:9090/
    deploy:
     
      labels:
        - ingress.host=prometheus.hongduydevops.id.vn 
        
volumes:
    grafana_data:
    prometheus_data:
    dbdata:

networks:
  network:
  ingress_network:
    external: true
  traefik_public:
    external: true
  prometheus:
    attachable: true
